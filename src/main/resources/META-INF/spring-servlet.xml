<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 扫描controller（controller层注入） -->
    <context:component-scan base-package="com.tickets">
    </context:component-scan>

    <mvc:annotation-driven />

    <mvc:default-servlet-handler />

    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 文件上传配置 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 上传的最大限制 -->
        <property name="maxUploadSize" value="209715200" />
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="UTF-8" />
        <!-- 上传文件的解析 -->
        <property name="resolveLazily" value="true" />
    </bean>

    <!-- 对模型视图添加前后缀 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--对静态资源的映射，经过这个映射之后，要访问/static/fowafolo.png时，实际访问的就是/resources/fowafolo.png-->
    <!--<mvc:resources mapping="/resources/**" location="/resources/"/>-->
    <!--<mvc:resources mapping="/views/**" location="/views/"/>-->

    <!--可以添加拦截器-->
    <!--<mvc:interceptors>-->
        <!--&lt;!&ndash; 多个拦截器,顺序执行 &ndash;&gt;-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/*" />  &lt;!&ndash; 如果不配置或/*,将拦截所有的Controller &ndash;&gt;-->
            <!--<bean class=""></bean>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->

    <context:component-scan base-package="com.tickets"/>

    <!--<bean memberid="dataSource"-->
    <!--class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
    <!--<property name="driverClassName" value="com.mysql.jdbc.Driver" />-->
    <!--<property name="url"-->
    <!--value="jdbc:mysql://localhost:3306/customerorder?characterEncoding=UTF8" />-->
    <!--<property name="memberid" value="root" />-->
    <!--<property name="password" value="19980512OK" />-->
    <!--</bean>-->

    <!--配置数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />  <!--数据库连接驱动-->
        <property name="jdbcUrl"
                  value="jdbc:mysql://localhost:3306/Tickets?characterEncoding=UTF8&amp;useSSL=false" />
        <property name="user" value="root" />   <!--用户名-->
        <property name="password" value="563" />   <!--密码-->
        <property name="maxPoolSize" value="400" />    <!--  &lt;!&ndash;最大连接数&ndash;&gt;-->
        <property name="minPoolSize" value="1" />     <!--  &lt;!&ndash;最小连接数&ndash;&gt;-->
        <property name="initialPoolSize" value="10" />     <!-- &lt;!&ndash;初始化连接池内的数据库连接&ndash;&gt;-->
        <property name="maxIdleTime" value="20" /> <!--;最大空闲时间-->
    </bean>

    <!-- 配置sessionFactory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.tickets.model" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.connection.autocommit">true</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- 定义 Autowired 自动注入 bean -->
    <bean
            class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />

    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

    <!-- 扫描有注解的文件 base-package 包路径 -->
    <context:component-scan base-package="com.tickets" />
    <!-- 声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--<tx:method name="*User" propagation="REQUIRED" />-->
            <!--<tx:method name="*" propagation="NOT_SUPPORTED" read-only="true" />-->
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>
    <!-- 定义切面，在com.tickets.service包及子包中所有以Service结尾的方法中,执行有关的hibernate session的事务操作 -->
    <aop:config>
        <!-- 只对业务逻辑层实施事务 -->
        <aop:pointcut id="serviceOperation"
                      expression="execution( * com.tickets.service..*Service.*(..))"  />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
    </aop:config>
</beans>